var assert = require('assert')
var chain = require('../index')
var nock = require('nock')

function nockHelper() {
    return nock('https://x.chain.com').defaultReplyHeaders({
        'Content-Type': 'application/json',
        'Chain-Request-Id': '1'
    })
}

describe('Enterprise SDK', function () {

    beforeEach(function () {
        this.client = new chain.Client({
            tokenID: 'example-key-id',
            tokenSecret: 'example-key-secret',
            url: 'https://x.chain.com'
        })
        this.client.keyStore.add(new chain.Xprv(
            'xprv9s21ZrQH143K3a9bdf75XBrpiHiQT8Tr441BVKTw6532LrMnhSUUj2p9UmDfnn8ry1ZmbRvnUHVpbVrn9rpmRBKk1p2EGJtQRNU5KoFuJai',
            true
        ))
    })

    afterEach(function () {
        nock.cleanAll()
    })

    describe('createAccountDeprecated', function () {
        it('returns an account on success', function (done) {
            var mID = "68b7ac31-0fdc-441c-bb46-8cea196e54ef"
            var resp = JSON.stringify({
                "index": [2, 0],
                "id": "8f64d2cd-721e-491d-bf2d-4bca5b5c83c5",
                "label": "example"
            })
            nockHelper().post('/v3/manager-nodes/' + mID + '/accounts').reply(
                200,
                resp
            )

            this.client.createAccount(mID, "example", function (err, account) {
                if (err) {
                    throw err
                }

                assert(account.id)
                assert(account.index)
                assert(account.label)

                done()
            })
        })
    })

    describe('createAccountWithKeys', function () {
        it('returns an account on success', function (done) {
            var mID = "68b7ac31-0fdc-441c-bb46-8cea196e54ef"
            var resp = JSON.stringify({
                "index": [2, 0],
                "id": "8f64d2cd-721e-491d-bf2d-4bca5b5c83c5",
                "label": "example"
            })
            nockHelper().post('/v3/manager-nodes/' + mID + '/accounts').reply(
                200,
                resp
            )

            var opts = {
                label: "i am string",
                keys: ["xpubxpubxpubxpub"]
            }
            this.client.createAccount(mID, opts, function (err, account) {
                if (err) {
                    throw err
                }

                assert(account.id)
                assert(account.index)
                assert(account.label)

                done()
            })
        })
    })

    describe('createAsset', function () {
        it('returns asset details on success', function (done) {
            var definition = {
                "key": "totally value"
            }
            var opts = {
                label: "sticky",
                definition: definition
            }
            var inID = "in06Z43CVB00808"
            var resp = JSON.stringify({
                "id": "d31ca56f88c0df7b03204d1644ae83ceca980ac3409b36a7c6b20f613cc0e84c",
                "issuer_node_id": "in06Z43CVB00808",
                "label": "sticky"
            })

            nockHelper()
                .post("/v3/issuer-nodes/" + inID + "/assets")
                .reply(200, resp)

            this.client.createAsset(inID, opts, function (err, asset) {
                assert(asset.label === "sticky")
                assert(asset.id === "d31ca56f88c0df7b03204d1644ae83ceca980ac3409b36a7c6b20f613cc0e84c")
                assert(asset.issuer_node_id === inID)
                done()
            })
        })
    })

    describe('getAccountActivity', function () {
        it('returns account activity on success', function (done) {
            var accountID = "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
            var resp = JSON.stringify({
                "activities": [
                    {
                        "address_id": "e5d49f34-6389-47de-b12a-c75c527d6036",
                        "timestamp": "2015-04-21T21:31:02.851Z",
                        "amount": 546,
                        "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e",
                        "type": "deposit",
                        "tansaction_id": "3c5c4034eb083109cf1b54e7466d75aea17cb250c2102e13ca8e830201627990"
                    }, {
                        "address_id": "422c5697-26c3-4d9d-9c0f-d6a2fd4b6886",
                        "timestamp": "2015-04-21T20:36:24.158Z",
                        "amount": 546,
                        "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e",
                        "type": "deposit",
                        "transaction_id": "e0873a1d0cb23f453d506660a227e04c967872b9d3903afcdd88f97c2f0595dc"
                    }, {
                        "address_id": "09064fa2-6dfe-46a3-a9af-8cdc1dc5513e",
                        "timestamp": "2015-04-21T20:35:58.251Z",
                        "amount": 546,
                        "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e",
                        "type": "deposit",
                        "transaction_id": "437baa0495f19183ea2cd1e2dddc4da66512b477cd0c68f1e37c1443918c5eb1"
                    }
                ]
            })

            nockHelper()
                .get('/v3/accounts/' + accountID + '/activity')
                .reply(200, resp)

            this.client.getAccountActivity(accountID, function (err, activity) {
                if (err) {
                    throw err
                }

                assert(activity.activities.length > 0)
                assert(activity.activities[0].address_id)
                assert(activity.activities[0].amount > 0)

                done()
            })
        })
    })

    describe('getAccountBalances', function () {
        it('returns account balances on success', function (done) {
            var accountID = "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
            var respJSON = {
                balances: [
                    {
                        asset_id: 'aaaaaa',
                        confirmed: 5,
                        total: 5
                    },
                    {
                        asset_id: 'bbbbb',
                        confirmed: 5,
                        total: 5
                    }
                ]
            }

            var respString = JSON.stringify(respJSON)
            nockHelper().get('/v3/accounts/' + accountID + '/balance').reply(200, respString)

            this.client.getAccountBalances(accountID, {}, function (err, b) {
                if (err) {
                    throw err
                }

                assert(b.balances.length === 2)
                assert(b.balances[0].asset_id)

                done()
            })
        })
    })

    describe('createAddress', function () {
        it('creates an address with no expiry given no extra args', function (done) {
            var accountID = "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
            nockHelper().post('/v3/accounts/' + accountID + '/addresses').reply(
                200,
                "{\"address_id\": \"6abc5ed7-f0c2-48cf-b8b5-da95b94cf614\", \"created\": \"2015-04-21T23:11:01.947226Z\", \"expires\": null, \"payment_request_message\": null, \"payment_details_message\": \"121b08001217a9149700f8edb313d0619b61190c2d48dec2531f7025871885b2dba9052a00\", \"address\": \"3FTT858kWbkb2LFDCZF7oD85tHbKdg1W9X\"}"
            )

            this.client.createAddress(accountID, function (err, address) {
                if (err) {
                    throw err
                }

                assert(address.address_id)
                assert(!address.expires)

                done()
            })
        })

        it('creates an address given expiry', function (done) {
            var accountID = "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
            nockHelper().post('/v3/accounts/' + accountID + '/addresses').reply(
                200,
                "{\"address_id\": \"ec1960cf-764f-4034-95ae-4953c081ca80\", \"signatures_required\": 2, \"signers\": [{\"pubkey\": \"0326f1fc85a6ff6b5831501fb6247b80fc21743b5562e681ac827d845d89246578\", \"type\": \"co_signer\", \"entity\": \"chain\"}, {\"derivation_path\": [0, 0, 0, 4, 0, 0], \"xpub_hash\": \"3f6de0445dad18f5e1da8746db5450b42555375d\", \"pubkey\": \"03587b6cf6bbfc79cb4ebf5cfd6be6fb57630a06784eabef0d476dbf715b5594d1\", \"entity\": \"client\"}], \"created\": \"2015-04-22T00:26:41.866113Z\", \"expires\": \"2015-04-25T23:20:13Z\", \"address\": \"3LtWZxhHmE1ZUiRKbPGrNvqocK7SSruZzH\"}"
            )

            this.client.createAddress(accountID, {
                amount: 1000,
                expires: "2015-04-25T16:20:13-07:00",
            }, function (err, address) {
                if (err) {
                    throw err
                }

                assert(address.address_id)
                assert(address.expires)

                done()
            })
        })
    })

    describe('buildTransactionBatch', function () {
        it('returns a transaction template and metadata', function (done) {
            var resp = JSON.stringify([{
                "template": {
                    "inputs": [
                        {
                            "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                            "signatures": [
                                {
                                    "derivation_path": [0, 1, 0, 1, 0, 0],
                                    "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }, {
                                    "derivation_path": [757, 0, 0, 1, 0, 1, 0],
                                    "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }
                            ],
                            "redeem_script": "5221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52ae"
                        }, {
                            "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                            "signatures": [
                                {
                                    "derivation_path": [757, 0, 0, 1, 0, 4, 0],
                                    "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }, {
                                    "derivation_path": [0, 1, 0, 4, 0, 0],
                                    "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }
                            ],
                            "redeem_script": "5221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52ae"
                        }
                    ],
                    "unsigned_hex": "0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e00100000017a914b09721c8bcbfe252c08d61a5877030dd253b7ff787ffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c482090000000017a914d1224fa47c8a8369fae795d0c5bef3042dba99e387ffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000"
                }
            }])
            nockHelper().post('/v3/transact/build')
                .reply(200, resp)

            var ins = [{
                manager_node_id: "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                asset_id: "awhatever",
                amount: 500
              }]

            var outs = [{
                account_id: "bwhatever",
                asset_id: "awhatever",
                amount: 500
              }]


            var tx = [{
                inputs: ins,
                outputs: outs
            }]

            this.client.buildTransactionBatch(tx, function (err, templates) {
                if (err) {
                    throw err
                }

                assert(templates)
                assert(templates[0].unsigned_hex)
                assert(templates[0].inputs.length > 0)

                done()
            })
        })
    })

    describe('signTransactionBatch', function () {
        it('should add signatures to a transaction template', function () {
            var template = {
                "inputs": [
                    {
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "signatures": [
                            {
                                "derivation_path": [0, 1, 0, 1, 0, 0],
                                "xpub": "xpub661MyMwAqRbcG4E4jge5tKoZGKYtrbBhRGvnHhsYeQa1DegwEynjGq8dL1Y2FfqyrxqRMHKAyy8XCX9PwsWEDVNjMGskgBugCnWfnLhC39i",
                                "signature": "",
                                "xprv_encrypted": ""
                            }, {
                                "derivation_path": [757, 0, 0, 1, 0, 1, 0],
                                "xpub": "xpub661MyMwAqRbcG4E4jge5tKoZGKYtrbBhRGvnHhsYeQa1DegwEynjGq8dL1Y2FfqyrxqRMHKAyy8XCX9PwsWEDVNjMGskgBugCnWfnLhC39i",
                                "signature": "",
                                "xprv_encrypted": ""
                            }
                        ],
                        "signature_data": "cb6d8a410a15bc0e86228d18801cc790b78d20bb57d6f3261ecccd5d7d0fb22b",
                        "redeem_script": "5221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52ae"
                    }, {
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "signature_data": "cb6d8a410a15bc0e86228d18801cc790b78d20bb57d6f3261ecccd5d7d0fb22b",
                        "signatures": [
                            {
                                "derivation_path": [757, 0, 0, 1, 0, 4, 0],
                                "xpub": "xpub661MyMwAqRbcG4E4jge5tKoZGKYtrbBhRGvnHhsYeQa1DegwEynjGq8dL1Y2FfqyrxqRMHKAyy8XCX9PwsWEDVNjMGskgBugCnWfnLhC39i",
                                "signature": "",
                                "xprv_encrypted": ""
                            }, {
                                "derivation_path": [0, 1, 0, 4, 0, 0],
                                "xpub": "xpub661MyMwAqRbcG4E4jge5tKoZGKYtrbBhRGvnHhsYeQa1DegwEynjGq8dL1Y2FfqyrxqRMHKAyy8XCX9PwsWEDVNjMGskgBugCnWfnLhC39i",
                                "signature": "",
                                "xprv_encrypted": ""
                            }
                        ],
                        "redeem_script": "5221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52ae"
                    }
                ],
                "unsigned_hex": "0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e00100000017a914b09721c8bcbfe252c08d61a5877030dd253b7ff787ffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c482090000000017a914d1224fa47c8a8369fae795d0c5bef3042dba99e387ffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000"
            }

            assert(template.inputs[0].signatures[0].signature.length === 0)
            this.client.signTransactionBatch([template])
            assert(template.inputs[0].signatures[0].signature.length > 0)
        })
    })

    describe('submitTransactionBatch', function () {
        it('should return a summary of the finalized transaction', function (done) {
            nockHelper().post('/v3/transact/submit').reply(
                200,
                "{\"raw_transaction\": \"0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e001000000d90047304402201451be241009a2fc4f2279f8f87e79cc052c1e0f23bbc721dd33c1cdabe63ba60220747a6b1db4c85295339ff7c23fbd09c1980a7601c1db619cdca5ede0dac1b716014730440220596881ccdd3b2e6b12e2ed87838ec0cc765ddaeaded59576c95530edd1bb95190220759c6f523674a5bc7dedb1faa5f1c1afed15391574f5abc4d3c83f3b3f85a90701475221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52aeffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c4820900000000db00483045022100e16101d7fb20c7d39984381a68ce9ea0d2c8831dacb7542fba409189727e508302207e219516a151a282615db15a821a91000e1891161ae2d775322f67d11b56155f01483045022100a92d87676d987bda3a8829dba01e928298b65470bbad7bf2cec3558e21a37f3f022064948794bf08febb41d742a004461c21f174b2f9f968cc15ff899ce3527bf14301475221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52aeffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000\", \"transaction_id\": \"8cdefcb41a42495b9c723c4eba2dd8a7ba4dd431c661d86e03e241521d9f42c8\"}"
            )

            var template = {
                "inputs": [
                    {
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "signatures": [
                            {
                                "derivation_path": [0, 1, 0, 1, 0, 0],
                                "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                "signature": "",
                                "xprv_encrypted": ""
                            }, {
                                "derivation_path": [757, 0, 0, 1, 0, 1, 0],
                                "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                "signature": "",
                                "xprv_encrypted": ""
                            }
                        ],
                        "redeem_script": "5221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52ae"
                    }, {
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "signatures": [
                            {
                                "derivation_path": [757, 0, 0, 1, 0, 4, 0],
                                "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                "signature": "",
                                "xprv_encrypted": ""
                            }, {
                                "derivation_path": [0, 1, 0, 4, 0, 0],
                                "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                "signature": "",
                                "xprv_encrypted": ""
                            }
                        ],
                        "redeem_script": "5221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52ae"
                    }
                ],
                "unsigned_hex": "0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e00100000017a914b09721c8bcbfe252c08d61a5877030dd253b7ff787ffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c482090000000017a914d1224fa47c8a8369fae795d0c5bef3042dba99e387ffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000",
            }

            this.client.signTransactionBatch([template])
            this.client.submitTransactionBatch([template], function (err, resp) {
                if (err) {
                    throw err
                }

                assert(resp.raw_transaction.length > 0)
                assert(resp.transaction_id.length > 0)

                done()
            })
        })
    })

    describe('transact', function () {
        it('returns transaction details on success', function (done) {
            var nockResp0 = JSON.stringify([{
                "template": {
                    "inputs": [
                        {
                            "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                            "signatures": [
                                {
                                    "derivation_path": [0, 1, 0, 1, 0, 0],
                                    "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }, {
                                    "derivation_path": [757, 0, 0, 1, 0, 1, 0],
                                    "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }
                            ],
                            "redeem_script": "5221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52ae"
                        }, {
                            "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                            "signatures": [
                                {
                                    "derivation_path": [757, 0, 0, 1, 0, 4, 0],
                                    "xpub_hash": "c7dcc933602bc808b990be37b18024fab516651d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }, {
                                    "derivation_path": [0, 1, 0, 4, 0, 0],
                                    "xpub_hash": "3f6de0445dad18f5e1da8746db5450b42555375d",
                                    "signature": "",
                                    "xprv_encrypted": ""
                                }
                            ],
                            "redeem_script": "5221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52ae"
                        }
                    ],
                    "unsigned_hex": "0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e00100000017a914b09721c8bcbfe252c08d61a5877030dd253b7ff787ffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c482090000000017a914d1224fa47c8a8369fae795d0c5bef3042dba99e387ffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000"
                }
            }])

            var nockResp1 = JSON.stringify([{
                "raw_transaction": "0100000002dc95052f7cf988ddfc3a90d3b97278964ce027a26066503d453fb20c1d3a87e001000000d90047304402201451be241009a2fc4f2279f8f87e79cc052c1e0f23bbc721dd33c1cdabe63ba60220747a6b1db4c85295339ff7c23fbd09c1980a7601c1db619cdca5ede0dac1b716014730440220596881ccdd3b2e6b12e2ed87838ec0cc765ddaeaded59576c95530edd1bb95190220759c6f523674a5bc7dedb1faa5f1c1afed15391574f5abc4d3c83f3b3f85a90701475221027d85385697d23358bdb30f640177174144370d0bb13630ed3851c48feab0875e2103565ad23cdca652b695b81e15848d922a549c42cff90308824850d6bc8635b05f52aeffffffff06044a4cea9f9f01196faa7a22085c385604601b329b78ab35b2b78f79c4820900000000db00483045022100e16101d7fb20c7d39984381a68ce9ea0d2c8831dacb7542fba409189727e508302207e219516a151a282615db15a821a91000e1891161ae2d775322f67d11b56155f01483045022100a92d87676d987bda3a8829dba01e928298b65470bbad7bf2cec3558e21a37f3f022064948794bf08febb41d742a004461c21f174b2f9f968cc15ff899ce3527bf14301475221026c9ca0a2415c10c4b2cb3a335f0b4554bcf0fcf542244185a17bc5823954901c2103303523ddda472fec47bb4c94dcd63aa525fb0b3742e719e77ca51ceee9833dfb52aeffffffff03e80300000000000017a914b09dcbe7d144e5ebd416c913867ea5d17ea6219187e80300000000000017a91477f73fb4c96a7b666d023bae024288f9d816fd7b87667800000000000017a9144f92f25256627c83311cfc4f2ba5d7d3910288718700000000",
                "transaction_id": "8cdefcb41a42495b9c723c4eba2dd8a7ba4dd431c661d86e03e241521d9f42c8"
            }])

            nockHelper()
                .post('/v3/transact/build')
                .reply(200, nockResp0)
                .post('/v3/transact/submit')
                .reply(200, nockResp1)

            var ins = [{
                asset_manager_id: "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                asset_id: "awhatever",
                amount: 500
              }]

            var outs = [{
                account_id: "bwhatever",
                asset_id: "awhatever",
                amount: 500
              }]

            var tx = [{
                inputs: ins,
                outputs: outs
            }]

            this.client.transfer(tx, function (err, resp) {
                if (err) {
                    throw err
                }

                assert(resp.raw_transaction.length > 0)
                assert(resp.transaction_id.length > 0)

                done()
            })
        })
    })

    describe('getManagerNodeActivity', function () {
        it('returns activiy items and a pagination cursor on success', function (done) {
            var self = this
            var resp = JSON.stringify({
                "last": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                "activities": [
                    {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["34VgnqEsAD5t7oRBxr72JUa27U52wjHLcD"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "AKgYCXsAkTu5FeEpndjjrEeB4wALkMHcwc",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "AKgYCXsAkTu5FeEpndjjrEeB4wALkMHcwc",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e",
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "3c5c4034eb083109cf1b54e7466d75aea17cb250c2102e13ca8e830201627990"
                    }, {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["33QTxr5dwrRDmdP3ytLauTT2o8avhBT2gm"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "AG14apDSUKaL3bu4jaocmWBcKzwCgUP2M",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "AG14apDSUKaL3bku4jaocmWBcKzwCgUP2M",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "e0873a1d0cb23f453d506660a227e04c967872b9d3903afcdd88f97c2f0595dc"
                    }, {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["3NANFNQbZGhZQ7VGsy6Vm1REEkfWLWZ3Aq"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "Acgu4KiFMWhhqxKRf2ftiiTxnLvf2v24Jd",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "Acgu4KiFMWhhqxKRf2ftiiTxnLvf2v24Jd",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "437baa0495f19183ea2cd1e2dddc4da66512b477cd0c68f1e37c1443918c5eb1"
                    }
                ]
            })

            var empty = JSON.stringify({
                "activities": []
            })

            nockHelper()
                .get('/v3/manager-nodes/68b7ac31-0fdc-441c-bb46-8cea196e54ef/activity')
                .reply(200, resp)
                .get('/v3/manager-nodes/68b7ac31-0fdc-441c-bb46-8cea196e54ef/activity')
                .matchHeader('range-after', '68b7ac31-0fdc-441c-bb46-8cea196e54ef')
                .reply(200, empty)

            self.client.getManagerNodeActivity('68b7ac31-0fdc-441c-bb46-8cea196e54ef', function (err, page) {
                if (err) {
                    throw err
                }

                assert(page.activities.length > 0)

                self.client.getManagerNodeActivity('68b7ac31-0fdc-441c-bb46-8cea196e54ef', {
                    after: page.last
                }, function (err, page) {
                    if (err) {
                        throw err
                    }

                    assert(page.activities.length === 0)

                    done()
                })
            })
        })
    })

    describe('getAccountActivity', function () {
        it('returns activiy items and a pagination cursor on success', function (done) {
            var self = this
            var resp = JSON.stringify({
                "last": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                "activities": [
                    {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["34VgnqEsAD5t7oRBxr72JUa27U52wjHLcD"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "AKgYCXsAkTu5FeEpndjjrEeB4wALkMHcwc",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "AKgYCXsAkTu5FeEpndjjrEeB4wALkMHcwc",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e",
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "3c5c4034eb083109cf1b54e7466d75aea17cb250c2102e13ca8e830201627990"
                    }, {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["33QTxr5dwrRDmdP3ytLauTT2o8avhBT2gm"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "AG14apDSUKaL3bu4jaocmWBcKzwCgUP2M",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "AG14apDSUKaL3bku4jaocmWBcKzwCgUP2M",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "e0873a1d0cb23f453d506660a227e04c967872b9d3903afcdd88f97c2f0595dc"
                    }, {
                        "inputs": [
                            {
                                "amount": 11092,
                                "addresses": ["3NANFNQbZGhZQ7VGsy6Vm1REEkfWLWZ3Aq"]
                            }
                        ],
                        "outputs": [
                            {
                                "asset_id": "Acgu4KiFMWhhqxKRf2ftiiTxnLvf2v24Jd",
                                "amount": 500,
                                "account_id": "95dad247-0ace-47d2-8dd3-b8766bcaaa54"
                            }, {
                                "asset_id": "Acgu4KiFMWhhqxKRf2ftiiTxnLvf2v24Jd",
                                "amount": 1000,
                                "account_id": "9f59e6cd-1c6f-47eb-bf2c-5b4f98d3073e"
                            }
                        ],
                        "manager_node_id": "68b7ac31-0fdc-441c-bb46-8cea196e54ef",
                        "transaction_id": "437baa0495f19183ea2cd1e2dddc4da66512b477cd0c68f1e37c1443918c5eb1"
                    }
                ]
            })

            var empty = JSON.stringify({
                "activities": []
            })

            nockHelper()
                .get('/v3/accounts/95dad247-0ace-47d2-8dd3-b8766bcaaa54/activity')
                .reply(200, resp)
                .get('/v3/accounts/95dad247-0ace-47d2-8dd3-b8766bcaaa54/activity')
                .matchHeader('range-after', '68b7ac31-0fdc-441c-bb46-8cea196e54ef')
                .reply(200, empty)

            self.client.getAccountActivity('95dad247-0ace-47d2-8dd3-b8766bcaaa54', function (err, page) {
                if (err) {
                    throw err
                }

                assert(page.activities.length > 0)

                self.client.getAccountActivity('95dad247-0ace-47d2-8dd3-b8766bcaaa54', {
                    after: page.last
                }, function (err, page) {
                    if (err) {
                        throw err
                    }

                    assert(page.activities.length === 0)

                    done()
                })
            })
        })
    })

})
